<UserControl x:Class="SimpleHMI.Controls.IntRefModePanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:prism="http://prismlibrary.com/"             
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:conv="clr-namespace:SimpleHMI.Converters"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:ctrls="clr-namespace:SimpleHMI.Controls"
             xmlns:srv="clr-namespace:SimpleHMI.Services"
             

             BorderBrush="LightGray" BorderThickness="1"
             Background="White">
    <UserControl.Resources>

        <Style x:Key="AxisCheckBox" TargetType="CheckBox">
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <conv:BitwiseConverter x:Key="BitwiseConverter" />
        <conv:IntToBoolConverter x:Key="IntToBoolConverter" />
        <conv:IntRefModeToStringConverter x:Key="IntRefModeToStringConverter" />
        <conv:ValueToBoolConverter x:Key="ValueToBoolConverter" />
        <conv:BoolToIntConverter x:Key="BoolToIntConverter" />
        <conv:LessThanConverter x:Key="LessThanConverter" />
        <conv:PrivilegeToVisibilityConverter x:Key="PrivilegeToVisibilityConverter" />
        <conv:IntRefStopModeToStringConverter x:Key="IntRefStopModeToStringConverter" />
        <conv:PrivilegeToBooleanConverter x:Key="PrivilegeToBooleanConverter" />
        <conv:IntRefConstModeToStringConverter x:Key="IntRefConstModeToStringConverter" />
        <conv:IntRefToLinearSweepEnableConverter x:Key="IntRefToLinearSweepEnableConverter" />


        <x:Array x:Key="ParametersArray" Type="sys:String">
            <sys:String>SINE WAVE</sys:String>
            <sys:String>LINEAR SWEEP</sys:String>
            <sys:String>CONSTANT OFFSET</sys:String>
        </x:Array>

        <x:Array x:Key="StopModeParametersArray" Type="sys:String">
            <sys:String>Stop at zero</sys:String>
            <sys:String>Stop at rest position</sys:String>
            <sys:String>Stop at current offset value</sys:String>
        </x:Array>

        <x:Array x:Key="ConstantParametersArray" Type="sys:String">
            <sys:String>Constant position</sys:String>
            <sys:String>Constant velocity</sys:String>
            <sys:String>Constant acceleration</sys:String>
        </x:Array>

    </UserControl.Resources>
    <ScrollViewer VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Auto">
        <Grid Height="Auto" Background="White">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="60"/>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition Width="70"/>
                <ColumnDefinition Width="150"/>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="80"/>
                <ColumnDefinition Width="120"/>
                <ColumnDefinition Width="80">
                    <!-- colonna visualizzata solo in caso linear sweep -->
                    <!--
                    <ColumnDefinition.Style>
                        <Style TargetType="ColumnDefinition">
                            <Setter Property="Width" Value="80" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding AxisList.A0.INT_REF_type_pre, Converter={StaticResource ValueToBoolConverter}, ConverterParameter=1}" Value="False">
                                    <Setter Property="Width" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                    -->
                </ColumnDefinition>
                <ColumnDefinition Width="80" />

                <ColumnDefinition Width="80" />

                <ColumnDefinition>
                    <ColumnDefinition.Style>
                        <Style TargetType="ColumnDefinition">
                            <Setter Property="Width" Value="150" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Security.CurrentUser.Level, Converter={StaticResource PrivilegeToBooleanConverter}, ConverterParameter=1}" Value="False">
                                    <Setter Property="Width" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>
                <ColumnDefinition>
                    <ColumnDefinition.Style>
                        <Style TargetType="ColumnDefinition">
                            <Setter Property="Width" Value="150" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Security.CurrentUser.Level, Converter={StaticResource PrivilegeToBooleanConverter}, ConverterParameter=1}" Value="False">
                                    <Setter Property="Width" Value="0" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ColumnDefinition.Style>
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition MinHeight="40"/>
                <RowDefinition Height="40"  />
                <RowDefinition Height="40"  />
                <RowDefinition Height="40"  />
                <RowDefinition Height="40"  />
                <RowDefinition Height="40"  />
                <RowDefinition Height="40"  />
            </Grid.RowDefinitions>

            <!-- Header -->
            <TextBlock Text="{Binding Translation[Axis],FallbackValue=Axis}" Grid.Row="0" Grid.Column="0" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="0" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[Start],FallbackValue='Start'}" Grid.Row="0" Grid.Column="1" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="1" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[Pause],FallbackValue='Pause'}" Grid.Row="0" Grid.Column="2" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="2" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[Mode],FallbackValue='Mode'}" Grid.Row="0" Grid.Column="3" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="3" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[Amplitude],FallbackValue='Amplitude'}" Grid.Row="0" Grid.Column="4" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="4" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[Frequency],FallbackValue='Frequency'}" Grid.Row="0" Grid.Column="5" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="5" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[Offset],FallbackValue='Offset'}" Grid.Row="0" Grid.Column="6" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="6" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[Phase],FallbackValue='Phase'}" Grid.Row="0" Grid.Column="7" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="7" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[Status],FallbackValue='Status'}" Grid.Row="0" Grid.Column="8" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="8" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[StartFrequency],FallbackValue='Start Freq.'}" Grid.Row="0" Grid.Column="9" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="9" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[FrequencySlope],FallbackValue='Freq. Slope'}" Grid.Row="0" Grid.Column="10" Style="{StaticResource GridHeader}"  TextWrapping="WrapWithOverflow" />
            <Border Grid.Row="0" Grid.Column="10" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[Constant],FallbackValue='Constant'}" Grid.Row="0" Grid.Column="11" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="11" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[StopMode],FallbackValue='Stop mode'}" Grid.Row="0" Grid.Column="12" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="12" Style="{StaticResource BorderCell}" />
            <TextBlock Text="{Binding Translation[ConstantMode],FallbackValue='Const. mode'}" Grid.Row="0" Grid.Column="13" Style="{StaticResource GridHeader}" TextWrapping="WrapWithOverflow"/>
            <Border Grid.Row="0" Grid.Column="13" Style="{StaticResource BorderCell}" />
            
            <!-- Borders -->
            <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="14" Style="{StaticResource BorderCell}" />

            <Border Grid.Row="1" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="14" Style="{StaticResource BorderCell}" />
            <Border Grid.Row="3" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="14" Style="{StaticResource BorderCell}" />
            <Border Grid.Row="5" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="14" Style="{StaticResource BorderCell}" />

            <!--
            <Border Grid.Row="1" Grid.RowSpan="2" Grid.Column="11" Grid.ColumnSpan="3" Style="{StaticResource BorderCell}" />
            <Border Grid.Row="3" Grid.RowSpan="2" Grid.Column="11" Grid.ColumnSpan="3" Style="{StaticResource BorderCell}" />
            <Border Grid.Row="5" Grid.RowSpan="2" Grid.Column="11" Grid.ColumnSpan="3" Style="{StaticResource BorderCell}" />
            
            <Border Grid.Row="1" Grid.Column="9" Grid.RowSpan="6" Style="{StaticResource BorderCell}" />
            <Border Grid.Row="1" Grid.Column="10" Grid.RowSpan="6" Style="{StaticResource BorderCell}" />
            -->
            
            <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="14" Grid.RowSpan="7" Style="{StaticResource BorderCell}" />

            <!-- Column 0 -->
            <CheckBox Grid.Row="1" Grid.Column="0" Grid.RowSpan="2"
                      Style="{StaticResource AxisCheckBox}" 
                      Content="{Binding Translation[X],FallbackValue=X}" 
                      Command="{Binding IntRefXAxisSelectionChangedCommand}" CommandParameter="{Binding AxisList.A0.INT_REF_activeAxis, Converter={StaticResource BoolToIntConverter}}"
                      IsChecked="{Binding AxisList.A0.INT_REF_activeAxis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <CheckBox Grid.Row="3" Grid.Column="0" Grid.RowSpan="2"
                      Style="{StaticResource AxisCheckBox}" 
                      Content="{Binding Translation[Y],FallbackValue=Y}" 
                      Command="{Binding IntRefYAxisSelectionChangedCommand}" CommandParameter="{Binding AxisList.A1.INT_REF_activeAxis, Converter={StaticResource BoolToIntConverter}}"
                      IsChecked="{Binding AxisList.A1.INT_REF_activeAxis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <CheckBox Grid.Row="5" Grid.Column="0" Grid.RowSpan="2"
                      Style="{StaticResource AxisCheckBox}" 
                      Content="{Binding Translation[Rot],FallbackValue=Rot}" 
                      Command="{Binding IntRefRotAxisSelectionChangedCommand}" CommandParameter="{Binding AxisList.A2.INT_REF_activeAxis, Converter={StaticResource BoolToIntConverter}}"
                      IsChecked="{Binding AxisList.A2.INT_REF_activeAxis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

            <!-- Column 1 -->
            <Button Style="{StaticResource btnRounded}" Grid.Row="1" Grid.Column="1" Grid.RowSpan="2"
                    Width="48" HorizontalAlignment="Center"
                Command="{Binding IntRefAxisStartCommand}" CommandParameter="0">
                <materialDesign:PackIcon Kind="Play" />
            </Button>

            <Button Style="{StaticResource btnRounded}" Grid.Row="3" Grid.Column="1" Grid.RowSpan="2"
                    Width="48" HorizontalAlignment="Center"
                Command="{Binding IntRefAxisStartCommand}" CommandParameter="1">
                <materialDesign:PackIcon Kind="Play" />
            </Button>

            <Button Style="{StaticResource btnRounded}" Grid.Row="5" Grid.Column="1" Grid.RowSpan="2" 
                    Width="48" HorizontalAlignment="Center"
                Command="{Binding IntRefAxisStartCommand}" CommandParameter="2">
                <materialDesign:PackIcon Kind="Play" />
            </Button>

            <!-- Column 2 -->
            <Button Style="{StaticResource btnRounded}" Grid.Row="1" Grid.Column="2" Grid.RowSpan="2"
                    Width="48" HorizontalAlignment="Center"
                Command="{Binding IntRefAxisPauseCommand}" CommandParameter="0">
                <materialDesign:PackIcon Kind="Pause" />
            </Button>

            <Button Style="{StaticResource btnRounded}" Grid.Row="3" Grid.Column="2" Grid.RowSpan="2"
                    Width="48" HorizontalAlignment="Center"
                Command="{Binding IntRefAxisPauseCommand}" CommandParameter="1">
                <materialDesign:PackIcon Kind="Pause" />
            </Button>

            <Button Style="{StaticResource btnRounded}" Grid.Row="5" Grid.Column="2" Grid.RowSpan="2"
                    Width="48" HorizontalAlignment="Center"
                Command="{Binding IntRefAxisPauseCommand}" CommandParameter="2">
                <materialDesign:PackIcon Kind="Pause" />
            </Button>

            <!-- Column 3 -->
            <ComboBox ItemsSource="{StaticResource ParametersArray}" Grid.Row="1" Grid.Column="3" Grid.RowSpan="2"
                      Margin="10" Width="Auto" Height="40" SelectedIndex="{Binding AxisList.A0.INT_REF_type_pre}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding IntRefXModeSelectionChangedCommand}" 
                                               CommandParameter="{Binding AxisList.A0.INT_REF_type_pre, Converter={StaticResource IntRefModeToStringConverter}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ComboBox>
            <ComboBox ItemsSource="{StaticResource ParametersArray}" Grid.Row="3" Grid.Column="3" Grid.RowSpan="2"
                      Margin="10" Width="Auto" Height="40" SelectedIndex="{Binding AxisList.A1.INT_REF_type_pre}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding IntRefYModeSelectionChangedCommand}"
                                               CommandParameter="{Binding AxisList.A1.INT_REF_type_pre, Converter={StaticResource IntRefModeToStringConverter}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ComboBox>

            <ComboBox ItemsSource="{StaticResource ParametersArray}" Grid.Row="5" Grid.Column="3" Grid.RowSpan="2"
                      Margin="10" Width="Auto" Height="40" SelectedIndex="{Binding AxisList.A2.INT_REF_type_pre}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding IntRefRotModeSelectionChangedCommand}"
                                               CommandParameter="{Binding AxisList.A2.INT_REF_type_pre, Converter={StaticResource IntRefModeToStringConverter}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ComboBox>

            <!-- Column 4 Amplitude -->
            <!-- Set -->
            <ctrls:NumericInput Grid.Row="1" Grid.Column="4"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A0.Set_INT_REF_A_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="{Binding AxisList.A0.INT_REF_type_pre, Converter={StaticResource ValueToBoolConverter}, ConverterParameter=0}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <b:InvokeCommandAction Command="{Binding IntRefWriteXAmplitudeCommand}" CommandParameter="{Binding AxisList.A0.Set_INT_REF_A_pre}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <!-- Current -->
            <ctrls:NumericInput Grid.Row="2" Grid.Column="4"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A0.INT_REF_A_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
            </ctrls:NumericInput>


            <!-- Set -->
                <ctrls:NumericInput Grid.Row="3" Grid.Column="4"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A1.Set_INT_REF_A_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="{Binding AxisList.A1.INT_REF_type_pre, Converter={StaticResource ValueToBoolConverter}, ConverterParameter=0}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="ValueChanged">
                            <b:InvokeCommandAction Command="{Binding IntRefWriteYAmplitudeCommand}" CommandParameter="{Binding AxisList.A1.Set_INT_REF_A_pre}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ctrls:NumericInput>
                <!-- Current -->
            <ctrls:NumericInput  Grid.Row="4" Grid.Column="4"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A1.INT_REF_A_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
                </ctrls:NumericInput>



                <!-- Set -->
                <ctrls:NumericInput Grid.Row="5" Grid.Column="4"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A2.Set_INT_REF_A_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="{Binding AxisList.A2.INT_REF_type_pre, Converter={StaticResource ValueToBoolConverter}, ConverterParameter=0}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="ValueChanged">
                            <b:InvokeCommandAction Command="{Binding IntRefWriteRotAmplitudeCommand}" CommandParameter="{Binding AxisList.A2.Set_INT_REF_A_pre}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ctrls:NumericInput>
                <!-- Current -->
            <ctrls:NumericInput Grid.Row="6" Grid.Column="4"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A2.INT_REF_A_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
                </ctrls:NumericInput>


            <!-- Column 5 Frequency -->
                <!-- Set -->
                <ctrls:NumericInput Grid.Row="1" Grid.Column="5"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A0.Set_INT_REF_F_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="{Binding AxisList.A0.INT_REF_type_pre, Converter={StaticResource LessThanConverter}, ConverterParameter=2}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="ValueChanged">
                            <b:InvokeCommandAction Command="{Binding IntRefWriteXFrequencyCommand}" CommandParameter="{Binding AxisList.A0.Set_INT_REF_F_pre}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ctrls:NumericInput>
                <!-- Current -->
            <ctrls:NumericInput  Grid.Row="2" Grid.Column="5"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A0.INT_REF_F_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
            </ctrls:NumericInput>

                <!-- Set -->
                <ctrls:NumericInput Grid.Row="3" Grid.Column="5"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A1.Set_INT_REF_F_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="{Binding AxisList.A1.INT_REF_type_pre, Converter={StaticResource LessThanConverter}, ConverterParameter=2}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="ValueChanged">
                            <b:InvokeCommandAction Command="{Binding IntRefWriteYFrequencyCommand}" CommandParameter="{Binding AxisList.A1.Set_INT_REF_F_pre}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ctrls:NumericInput>
                <!-- Current -->
            <ctrls:NumericInput Grid.Row="4" Grid.Column="5"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A1.INT_REF_F_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
                </ctrls:NumericInput>



                <!-- Set -->
                <ctrls:NumericInput Grid.Row="5" Grid.Column="5"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A2.Set_INT_REF_F_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="{Binding AxisList.A2.INT_REF_type_pre, Converter={StaticResource LessThanConverter}, ConverterParameter=2}">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="ValueChanged">
                            <b:InvokeCommandAction Command="{Binding IntRefWriteRotFrequencyCommand}" CommandParameter="{Binding AxisList.A2.Set_INT_REF_F_pre}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ctrls:NumericInput>
                <!-- Current -->
            <ctrls:NumericInput Grid.Row="6" Grid.Column="5"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A2.INT_REF_F_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
                </ctrls:NumericInput>



            <!-- Column 6 Offset -->
                <!-- Set -->
                <ctrls:NumericInput Grid.Row="1" Grid.Column="6"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A0.Set_INT_REF_O_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="True">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="ValueChanged">
                            <b:InvokeCommandAction Command="{Binding IntRefWriteXOffsetCommand}" CommandParameter="{Binding AxisList.A0.Set_INT_REF_O_pre}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ctrls:NumericInput>
                <!-- Current -->
            <ctrls:NumericInput Grid.Row="2" Grid.Column="6"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A0.INT_REF_O_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
                </ctrls:NumericInput>


            
                <!-- Set -->
                <ctrls:NumericInput Grid.Row="3" Grid.Column="6"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A1.Set_INT_REF_O_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="True">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="ValueChanged">
                            <b:InvokeCommandAction Command="{Binding IntRefWriteYOffsetCommand}" CommandParameter="{Binding AxisList.A1.Set_INT_REF_O_pre}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ctrls:NumericInput>
                <!-- Current -->
            <ctrls:NumericInput Grid.Row="4" Grid.Column="6"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A1.INT_REF_O_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
                </ctrls:NumericInput>

                <!-- Set -->
            <ctrls:NumericInput Grid.Row="5" Grid.Column="6"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A2.Set_INT_REF_O_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="True">
                    <b:Interaction.Triggers>
                        <b:EventTrigger EventName="ValueChanged">
                            <b:InvokeCommandAction Command="{Binding IntRefWriteRotOffsetCommand}" CommandParameter="{Binding AxisList.A2.Set_INT_REF_O_pre}" />
                        </b:EventTrigger>
                    </b:Interaction.Triggers>
                </ctrls:NumericInput>
                <!-- Current -->
            <ctrls:NumericInput Grid.Row="6" Grid.Column="6"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A2.INT_REF_O_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
            </ctrls:NumericInput>


            <!-- Column 7 Phase -->
            <ctrls:NumericInput Grid.Row="1" Grid.Column="7" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A0.Set_INT_REF_P_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="360" Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="{Binding AxisList.A0.INT_REF_type_pre, Converter={StaticResource ValueToBoolConverter}, ConverterParameter=0}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <prism:InvokeCommandAction Command="{Binding MoveAxisWriteXFrequencyCommand}" CommandParameter="{Binding AxisList.A0.Set_INT_REF_P_pre}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <ctrls:NumericInput Grid.Row="2" Grid.Column="7"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A0.INT_REF_P_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
            </ctrls:NumericInput>

            <ctrls:NumericInput Grid.Row="3" Grid.Column="7" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A1.Set_INT_REF_P_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="360" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="{Binding AxisList.A1.INT_REF_type_pre, Converter={StaticResource ValueToBoolConverter}, ConverterParameter=0}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <prism:InvokeCommandAction Command="{Binding MoveAxisWriteYFrequencyCommand}" CommandParameter="{Binding AxisList.A1.Set_INT_REF_P_pre}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <ctrls:NumericInput Grid.Row="4" Grid.Column="7"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A1.INT_REF_P_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
            </ctrls:NumericInput>

            <ctrls:NumericInput Grid.Row="5" Grid.Column="7" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A2.Set_INT_REF_P_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="360" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}"
                            IsEnabled="{Binding AxisList.A2.INT_REF_type_pre, Converter={StaticResource ValueToBoolConverter}, ConverterParameter=0}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <prism:InvokeCommandAction Command="{Binding MoveAxisWriteRotFrequencyCommand}" CommandParameter="{Binding AxisList.A2.Set_INT_REF_P_pre}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <ctrls:NumericInput Grid.Row="6" Grid.Column="7"
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A2.INT_REF_P_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInput}"
                            IsReadyOnly="True">
            </ctrls:NumericInput>            

            <!-- Column 8 Status -->
            <TextBlock Grid.Row="1" Grid.RowSpan="2" Grid.Column="8" VerticalAlignment="Center" Margin="5">
                <TextBlock.Text>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:SyncStateToStringConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="Translation"/>
                        <Binding Path="AxisList.A0.INT_REF_syncState"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

            <TextBlock Grid.Row="3" Grid.RowSpan="2" Grid.Column="8" VerticalAlignment="Center" Margin="5">
                <TextBlock.Text>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:SyncStateToStringConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="Translation"/>
                        <Binding Path="AxisList.A1.INT_REF_syncState"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

            <TextBlock Grid.Row="5" Grid.RowSpan="2" Grid.Column="8" VerticalAlignment="Center"  Margin="5">
                <TextBlock.Text>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:SyncStateToStringConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="Translation"/>
                        <Binding Path="AxisList.A2.INT_REF_syncState"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>

            <!-- Column 9 Frequenza (solo linear sweep e no_motion o pause)-->
            <ctrls:NumericInput Grid.Row="1" Grid.RowSpan="2" Grid.Column="9" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding IntRefStartFrequency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}">
                <ctrls:NumericInput.IsEnabled>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:IntRefToLinearSweepEnableConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="AxisList.A0.INT_REF_type_pre"/>
                        <Binding Path="AxisList.A0.INT_REF_syncState"/>
                    </MultiBinding>
                </ctrls:NumericInput.IsEnabled>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <b:InvokeCommandAction Command="{Binding IntRefWriteStartFrequency}" CommandParameter="{Binding IntRefStartFrequency}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <ctrls:NumericInput Grid.Row="3" Grid.RowSpan="2" Grid.Column="9" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding IntRefStartFrequency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}">
                <ctrls:NumericInput.IsEnabled>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:IntRefToLinearSweepEnableConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="AxisList.A1.INT_REF_type_pre"/>
                        <Binding Path="AxisList.A1.INT_REF_syncState"/>
                    </MultiBinding>
                </ctrls:NumericInput.IsEnabled>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <b:InvokeCommandAction Command="{Binding IntRefWriteStartFrequency}" CommandParameter="{Binding IntRefStartFrequency}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <ctrls:NumericInput Grid.Row="5" Grid.RowSpan="2" Grid.Column="9" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding IntRefStartFrequency, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}">
                <ctrls:NumericInput.IsEnabled>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:IntRefToLinearSweepEnableConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="AxisList.A2.INT_REF_type_pre"/>
                        <Binding Path="AxisList.A2.INT_REF_syncState"/>
                    </MultiBinding>
                </ctrls:NumericInput.IsEnabled>                
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <b:InvokeCommandAction Command="{Binding IntRefWriteStartFrequency}" CommandParameter="{Binding IntRefStartFrequency}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <!-- Column 10 frequency slope (solo linear sweep) -->
            <ctrls:NumericInput Grid.Row="1" Grid.RowSpan="2" Grid.Column="10" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding IntRefFrequencySlope, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}">
                <ctrls:NumericInput.IsEnabled>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:IntRefToLinearSweepEnableConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="AxisList.A0.INT_REF_type_pre"/>
                        <Binding Path="AxisList.A0.INT_REF_syncState"/>
                    </MultiBinding>
                </ctrls:NumericInput.IsEnabled>                
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <b:InvokeCommandAction Command="{Binding WriteIntRefFrequencySlopeCommand}" CommandParameter="{Binding IntRefFrequencySlope}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <ctrls:NumericInput Grid.Row="3" Grid.RowSpan="2" Grid.Column="10" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding IntRefFrequencySlope, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}">
                <ctrls:NumericInput.IsEnabled>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:IntRefToLinearSweepEnableConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="AxisList.A1.INT_REF_type_pre"/>
                        <Binding Path="AxisList.A1.INT_REF_syncState"/>
                    </MultiBinding>
                </ctrls:NumericInput.IsEnabled>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <b:InvokeCommandAction Command="{Binding WriteIntRefFrequencySlopeCommand}" CommandParameter="{Binding IntRefFrequencySlope}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <ctrls:NumericInput Grid.Row="5" Grid.RowSpan="2" Grid.Column="10" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding IntRefFrequencySlope, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}">
                <ctrls:NumericInput.IsEnabled>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:IntRefToLinearSweepEnableConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="AxisList.A2.INT_REF_type_pre"/>
                        <Binding Path="AxisList.A2.INT_REF_syncState"/>
                    </MultiBinding>
                </ctrls:NumericInput.IsEnabled>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <b:InvokeCommandAction Command="{Binding WriteIntRefFrequencySlopeCommand}" CommandParameter="{Binding IntRefFrequencySlope}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <!-- Column 11 offset (solo linear sweep) -->
            <ctrls:NumericInput Grid.Row="1" Grid.RowSpan="2" Grid.Column="11" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A0.INT_REF_sweepConstParam_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}">
                <ctrls:NumericInput.IsEnabled>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:IntRefToLinearSweepEnableConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="AxisList.A0.INT_REF_type_pre"/>
                        <Binding Path="AxisList.A0.INT_REF_syncState"/>
                    </MultiBinding>
                </ctrls:NumericInput.IsEnabled>                
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <b:InvokeCommandAction Command="{Binding IntRefWriteXSweepConstCommand}" CommandParameter="{Binding AxisList.A0.INT_REF_sweepConstParam_pre}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <ctrls:NumericInput Grid.Row="3" Grid.RowSpan="2" Grid.Column="11" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A1.INT_REF_sweepConstParam_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}">
                <ctrls:NumericInput.IsEnabled>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:IntRefToLinearSweepEnableConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="AxisList.A1.INT_REF_type_pre"/>
                        <Binding Path="AxisList.A1.INT_REF_syncState"/>
                    </MultiBinding>
                </ctrls:NumericInput.IsEnabled>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <b:InvokeCommandAction Command="{Binding IntRefWriteYSweepConstCommand}" CommandParameter="{Binding AxisList.A1.INT_REF_sweepConstParam_pre}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <ctrls:NumericInput Grid.Row="5" Grid.RowSpan="2" Grid.Column="11" 
                            Culture="{Binding Translation.CultureInfo}"
                            Value="{Binding AxisList.A2.INT_REF_sweepConstParam_pre, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Maximum="9999999" 
                            Minimum="0"
                            Style="{StaticResource NumericInputSet}">
                <ctrls:NumericInput.IsEnabled>
                    <MultiBinding TargetNullValue="" FallbackValue="">
                        <MultiBinding.Converter>
                            <conv:IntRefToLinearSweepEnableConverter/>
                        </MultiBinding.Converter>
                        <Binding Path="AxisList.A2.INT_REF_type_pre"/>
                        <Binding Path="AxisList.A2.INT_REF_syncState"/>
                    </MultiBinding>
                </ctrls:NumericInput.IsEnabled>
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="ValueChanged">
                        <b:InvokeCommandAction Command="{Binding IntRefWriteRotSweepConstCommand}" CommandParameter="{Binding AxisList.A2.INT_REF_sweepConstParam_pre}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ctrls:NumericInput>

            <!-- Column 12 Stop mode -->
            <ComboBox ItemsSource="{StaticResource StopModeParametersArray}" Grid.Row="1" Grid.RowSpan="2" Height="40" Grid.Column="12" Margin="10" Width="Auto"
                      SelectedIndex="{Binding AxisList.A0.IntRefStopModeSelected}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding IntRefXStopModeSelectionChangedCommand}" 
                                               CommandParameter="{Binding AxisList.A0.IntRefStopModeSelected, Converter={StaticResource IntRefStopModeToStringConverter}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ComboBox>

            <ComboBox ItemsSource="{StaticResource StopModeParametersArray}" Grid.Row="3" Grid.RowSpan="2" Height="40" Grid.Column="12" Margin="10" Width="Auto"
                      SelectedIndex="{Binding AxisList.A1.IntRefStopModeSelected}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding IntRefYStopModeSelectionChangedCommand}" 
                                               CommandParameter="{Binding AxisList.A1.IntRefStopModeSelected, Converter={StaticResource IntRefStopModeToStringConverter}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ComboBox>

            <ComboBox ItemsSource="{StaticResource StopModeParametersArray}" Grid.Row="5" Grid.RowSpan="2" Height="40" Grid.Column="12" Margin="10" Width="Auto"
                      SelectedIndex="{Binding AxisList.A2.IntRefStopModeSelected}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding IntRefRotStopModeSelectionChangedCommand}" 
                                               CommandParameter="{Binding AxisList.A2.IntRefStopModeSelected, Converter={StaticResource IntRefStopModeToStringConverter}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ComboBox>


            <!-- Column 13 constant mode -->
            <ComboBox ItemsSource="{StaticResource ConstantParametersArray}" Grid.Row="1" Grid.RowSpan="2" Height="40" Grid.Column="13" Margin="10" Width="Auto" 
                      SelectedIndex="{Binding AxisList.A0.IntRefConstantModeSelected}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding IntRefXConstModeSelectionChangedCommand}" 
                                               CommandParameter="{Binding AxisList.A0.IntRefConstantModeSelected, Converter={StaticResource IntRefConstModeToStringConverter}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ComboBox>
            <ComboBox ItemsSource="{StaticResource ConstantParametersArray}" Grid.Row="3" Grid.RowSpan="2" Height="40" Grid.Column="13" Margin="10" Width="Auto" 
                      SelectedIndex="{Binding AxisList.A1.IntRefConstantModeSelected}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding IntRefYConstModeSelectionChangedCommand}" 
                                               CommandParameter="{Binding AxisList.A1.IntRefConstantModeSelected, Converter={StaticResource IntRefConstModeToStringConverter}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ComboBox>                
            <ComboBox ItemsSource="{StaticResource ConstantParametersArray}" Grid.Row="5" Grid.RowSpan="2" Height="40" Grid.Column="13" Margin="10" Width="Auto" 
                      SelectedIndex="{Binding AxisList.A2.IntRefConstantModeSelected}">
                <b:Interaction.Triggers>
                    <b:EventTrigger EventName="SelectionChanged">
                        <prism:InvokeCommandAction Command="{Binding IntRefRotConstModeSelectionChangedCommand}" 
                                               CommandParameter="{Binding AxisList.A2.IntRefConstantModeSelected, Converter={StaticResource IntRefConstModeToStringConverter}}" />
                    </b:EventTrigger>
                </b:Interaction.Triggers>
            </ComboBox>
        </Grid>
    </ScrollViewer>
</UserControl>
